@using Entities
@inject B_Product b_product
@inject B_Category b_category
<div>
    <EditForm Model="product">
        <div class="form-group">
            <label>Referencia:</label>
            <InputText @bind-Value="product.ProductId" class="form-control" />
        </div>
        <div class="form-group">
            <label>Nombre producto:</label>
            <InputText @bind-Value="product.ProductName" class="form-control" />
        </div>
        <div class="form-group">
            <label>Descripcion:</label>
            <InputTextArea @bind-Value="product.ProductDescription" class="form-control" />
        </div>
        <div class="form-group">
            <label>Categoria:</label>
            <InputSelect @bind-Value="product.CategoryId" class="form-control">
                @foreach (var category in categories)
                {
                    <option value="@category.CategoryId">@category.CategoryName</option>
                }
            </InputSelect>
        </div>
        <input type="button" value="Agregar" @onclick="SaveProduct" />
    </EditForm>
</div>

@code {
    ProductEntity product = new ProductEntity();
    List<CategoryEntity> categories = new List<CategoryEntity>();

    protected override async Task OnInitializedAsync()
    {
        categories = b_category.List();
    }

    private void SaveProduct()
    {
        b_product.Create(product);
    }
}
